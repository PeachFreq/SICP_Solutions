;; Observe these two alternative procedures that define a method for adding two positive integers.
;; Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4 5).

(define (+ a b)
  (if (= a 0) b (inc (+ (dec a) b))))

;; The first thing the interpreter does is assess whether a is 0, if so it returns b as the answer, but if not
;; it decrements a and adds it to be, then adds 1 to this sum. We can see that this recursive procedure is evolving
;; a recursive process. Eventually the base case of a=0 is reached, but by this time we will be evaluating the increment
;; of the increment of the increment of the increment... (grows larger in space).

(define (+ a b)
  (if (= a 0) b (+ (dec a) (inc b))))

;; This is an example of a recursive procedure evolving an iterative process. Each time a is decremented, b is
;; incremented, and the result is that there is nothing to "hang on to". Each time through the loop the interpreter
;; has a complete picture of the problem using just the state variables, and as such the process is constant in space.
